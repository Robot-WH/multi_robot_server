// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: orbit_network.proto

#ifndef PROTOBUF_orbit_5fnetwork_2eproto__INCLUDED
#define PROTOBUF_orbit_5fnetwork_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace comm {
namespace orbitNet {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_orbit_5fnetwork_2eproto();
void protobuf_InitDefaults_orbit_5fnetwork_2eproto();
void protobuf_AssignDesc_orbit_5fnetwork_2eproto();
void protobuf_ShutdownFile_orbit_5fnetwork_2eproto();

class OrbitNetwork;
class StateNode;

// ===================================================================

class StateNode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.orbitNet.proto.StateNode) */ {
 public:
  StateNode();
  virtual ~StateNode();

  StateNode(const StateNode& from);

  inline StateNode& operator=(const StateNode& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateNode& default_instance();

  static const StateNode* internal_default_instance();

  void Swap(StateNode* other);

  // implements Message ----------------------------------------------

  inline StateNode* New() const { return New(NULL); }

  StateNode* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StateNode& from);
  void MergeFrom(const StateNode& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(StateNode* other);
  void UnsafeMergeFrom(const StateNode& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float state_x = 1;
  void clear_state_x();
  static const int kStateXFieldNumber = 1;
  float state_x() const;
  void set_state_x(float value);

  // optional float state_y = 2;
  void clear_state_y();
  static const int kStateYFieldNumber = 2;
  float state_y() const;
  void set_state_y(float value);

  // optional float state_yaw = 3;
  void clear_state_yaw();
  static const int kStateYawFieldNumber = 3;
  float state_yaw() const;
  void set_state_yaw(float value);

  // optional uint32 link_type = 4;
  void clear_link_type();
  static const int kLinkTypeFieldNumber = 4;
  ::google::protobuf::uint32 link_type() const;
  void set_link_type(::google::protobuf::uint32 value);

  // repeated float link_param = 5;
  int link_param_size() const;
  void clear_link_param();
  static const int kLinkParamFieldNumber = 5;
  float link_param(int index) const;
  void set_link_param(int index, float value);
  void add_link_param(float value);
  const ::google::protobuf::RepeatedField< float >&
      link_param() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_link_param();

  // @@protoc_insertion_point(class_scope:comm.orbitNet.proto.StateNode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > link_param_;
  mutable int _link_param_cached_byte_size_;
  float state_x_;
  float state_y_;
  float state_yaw_;
  ::google::protobuf::uint32 link_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_orbit_5fnetwork_2eproto_impl();
  friend void  protobuf_AddDesc_orbit_5fnetwork_2eproto_impl();
  friend void protobuf_AssignDesc_orbit_5fnetwork_2eproto();
  friend void protobuf_ShutdownFile_orbit_5fnetwork_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<StateNode> StateNode_default_instance_;

// -------------------------------------------------------------------

class OrbitNetwork : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.orbitNet.proto.OrbitNetwork) */ {
 public:
  OrbitNetwork();
  virtual ~OrbitNetwork();

  OrbitNetwork(const OrbitNetwork& from);

  inline OrbitNetwork& operator=(const OrbitNetwork& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrbitNetwork& default_instance();

  static const OrbitNetwork* internal_default_instance();

  void Swap(OrbitNetwork* other);

  // implements Message ----------------------------------------------

  inline OrbitNetwork* New() const { return New(NULL); }

  OrbitNetwork* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrbitNetwork& from);
  void MergeFrom(const OrbitNetwork& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OrbitNetwork* other);
  void UnsafeMergeFrom(const OrbitNetwork& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .comm.orbitNet.proto.StateNode node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::comm::orbitNet::proto::StateNode& node(int index) const;
  ::comm::orbitNet::proto::StateNode* mutable_node(int index);
  ::comm::orbitNet::proto::StateNode* add_node();
  ::google::protobuf::RepeatedPtrField< ::comm::orbitNet::proto::StateNode >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::comm::orbitNet::proto::StateNode >&
      node() const;

  // @@protoc_insertion_point(class_scope:comm.orbitNet.proto.OrbitNetwork)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::comm::orbitNet::proto::StateNode > node_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_orbit_5fnetwork_2eproto_impl();
  friend void  protobuf_AddDesc_orbit_5fnetwork_2eproto_impl();
  friend void protobuf_AssignDesc_orbit_5fnetwork_2eproto();
  friend void protobuf_ShutdownFile_orbit_5fnetwork_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OrbitNetwork> OrbitNetwork_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// StateNode

// optional float state_x = 1;
inline void StateNode::clear_state_x() {
  state_x_ = 0;
}
inline float StateNode::state_x() const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.StateNode.state_x)
  return state_x_;
}
inline void StateNode::set_state_x(float value) {
  
  state_x_ = value;
  // @@protoc_insertion_point(field_set:comm.orbitNet.proto.StateNode.state_x)
}

// optional float state_y = 2;
inline void StateNode::clear_state_y() {
  state_y_ = 0;
}
inline float StateNode::state_y() const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.StateNode.state_y)
  return state_y_;
}
inline void StateNode::set_state_y(float value) {
  
  state_y_ = value;
  // @@protoc_insertion_point(field_set:comm.orbitNet.proto.StateNode.state_y)
}

// optional float state_yaw = 3;
inline void StateNode::clear_state_yaw() {
  state_yaw_ = 0;
}
inline float StateNode::state_yaw() const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.StateNode.state_yaw)
  return state_yaw_;
}
inline void StateNode::set_state_yaw(float value) {
  
  state_yaw_ = value;
  // @@protoc_insertion_point(field_set:comm.orbitNet.proto.StateNode.state_yaw)
}

// optional uint32 link_type = 4;
inline void StateNode::clear_link_type() {
  link_type_ = 0u;
}
inline ::google::protobuf::uint32 StateNode::link_type() const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.StateNode.link_type)
  return link_type_;
}
inline void StateNode::set_link_type(::google::protobuf::uint32 value) {
  
  link_type_ = value;
  // @@protoc_insertion_point(field_set:comm.orbitNet.proto.StateNode.link_type)
}

// repeated float link_param = 5;
inline int StateNode::link_param_size() const {
  return link_param_.size();
}
inline void StateNode::clear_link_param() {
  link_param_.Clear();
}
inline float StateNode::link_param(int index) const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.StateNode.link_param)
  return link_param_.Get(index);
}
inline void StateNode::set_link_param(int index, float value) {
  link_param_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.orbitNet.proto.StateNode.link_param)
}
inline void StateNode::add_link_param(float value) {
  link_param_.Add(value);
  // @@protoc_insertion_point(field_add:comm.orbitNet.proto.StateNode.link_param)
}
inline const ::google::protobuf::RepeatedField< float >&
StateNode::link_param() const {
  // @@protoc_insertion_point(field_list:comm.orbitNet.proto.StateNode.link_param)
  return link_param_;
}
inline ::google::protobuf::RepeatedField< float >*
StateNode::mutable_link_param() {
  // @@protoc_insertion_point(field_mutable_list:comm.orbitNet.proto.StateNode.link_param)
  return &link_param_;
}

inline const StateNode* StateNode::internal_default_instance() {
  return &StateNode_default_instance_.get();
}
// -------------------------------------------------------------------

// OrbitNetwork

// repeated .comm.orbitNet.proto.StateNode node = 1;
inline int OrbitNetwork::node_size() const {
  return node_.size();
}
inline void OrbitNetwork::clear_node() {
  node_.Clear();
}
inline const ::comm::orbitNet::proto::StateNode& OrbitNetwork::node(int index) const {
  // @@protoc_insertion_point(field_get:comm.orbitNet.proto.OrbitNetwork.node)
  return node_.Get(index);
}
inline ::comm::orbitNet::proto::StateNode* OrbitNetwork::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:comm.orbitNet.proto.OrbitNetwork.node)
  return node_.Mutable(index);
}
inline ::comm::orbitNet::proto::StateNode* OrbitNetwork::add_node() {
  // @@protoc_insertion_point(field_add:comm.orbitNet.proto.OrbitNetwork.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::comm::orbitNet::proto::StateNode >*
OrbitNetwork::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:comm.orbitNet.proto.OrbitNetwork.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::orbitNet::proto::StateNode >&
OrbitNetwork::node() const {
  // @@protoc_insertion_point(field_list:comm.orbitNet.proto.OrbitNetwork.node)
  return node_;
}

inline const OrbitNetwork* OrbitNetwork::internal_default_instance() {
  return &OrbitNetwork_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace orbitNet
}  // namespace comm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_orbit_5fnetwork_2eproto__INCLUDED
