// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: obs.proto

#ifndef PROTOBUF_obs_2eproto__INCLUDED
#define PROTOBUF_obs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "pose.pb.h"
// @@protoc_insertion_point(includes)

namespace comm {
namespace obs {
namespace proto {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_obs_2eproto();
void protobuf_InitDefaults_obs_2eproto();
void protobuf_AssignDesc_obs_2eproto();
void protobuf_ShutdownFile_obs_2eproto();

class ObsPacket;

// ===================================================================

class ObsPacket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:comm.obs.proto.ObsPacket) */ {
 public:
  ObsPacket();
  virtual ~ObsPacket();

  ObsPacket(const ObsPacket& from);

  inline ObsPacket& operator=(const ObsPacket& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ObsPacket& default_instance();

  static const ObsPacket* internal_default_instance();

  void Swap(ObsPacket* other);

  // implements Message ----------------------------------------------

  inline ObsPacket* New() const { return New(NULL); }

  ObsPacket* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ObsPacket& from);
  void MergeFrom(const ObsPacket& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ObsPacket* other);
  void UnsafeMergeFrom(const ObsPacket& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional double timestamp = 2;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  double timestamp() const;
  void set_timestamp(double value);

  // repeated double pose = 3;
  int pose_size() const;
  void clear_pose();
  static const int kPoseFieldNumber = 3;
  double pose(int index) const;
  void set_pose(int index, double value);
  void add_pose(double value);
  const ::google::protobuf::RepeatedField< double >&
      pose() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_pose();

  // repeated .comm.pose.proto.Vector2f stable_laser_points = 4;
  int stable_laser_points_size() const;
  void clear_stable_laser_points();
  static const int kStableLaserPointsFieldNumber = 4;
  const ::comm::pose::proto::Vector2f& stable_laser_points(int index) const;
  ::comm::pose::proto::Vector2f* mutable_stable_laser_points(int index);
  ::comm::pose::proto::Vector2f* add_stable_laser_points();
  ::google::protobuf::RepeatedPtrField< ::comm::pose::proto::Vector2f >*
      mutable_stable_laser_points();
  const ::google::protobuf::RepeatedPtrField< ::comm::pose::proto::Vector2f >&
      stable_laser_points() const;

  // @@protoc_insertion_point(class_scope:comm.obs.proto.ObsPacket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< double > pose_;
  mutable int _pose_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::comm::pose::proto::Vector2f > stable_laser_points_;
  double timestamp_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_obs_2eproto_impl();
  friend void  protobuf_AddDesc_obs_2eproto_impl();
  friend void protobuf_AssignDesc_obs_2eproto();
  friend void protobuf_ShutdownFile_obs_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ObsPacket> ObsPacket_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ObsPacket

// optional uint32 type = 1;
inline void ObsPacket::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 ObsPacket::type() const {
  // @@protoc_insertion_point(field_get:comm.obs.proto.ObsPacket.type)
  return type_;
}
inline void ObsPacket::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:comm.obs.proto.ObsPacket.type)
}

// optional double timestamp = 2;
inline void ObsPacket::clear_timestamp() {
  timestamp_ = 0;
}
inline double ObsPacket::timestamp() const {
  // @@protoc_insertion_point(field_get:comm.obs.proto.ObsPacket.timestamp)
  return timestamp_;
}
inline void ObsPacket::set_timestamp(double value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:comm.obs.proto.ObsPacket.timestamp)
}

// repeated double pose = 3;
inline int ObsPacket::pose_size() const {
  return pose_.size();
}
inline void ObsPacket::clear_pose() {
  pose_.Clear();
}
inline double ObsPacket::pose(int index) const {
  // @@protoc_insertion_point(field_get:comm.obs.proto.ObsPacket.pose)
  return pose_.Get(index);
}
inline void ObsPacket::set_pose(int index, double value) {
  pose_.Set(index, value);
  // @@protoc_insertion_point(field_set:comm.obs.proto.ObsPacket.pose)
}
inline void ObsPacket::add_pose(double value) {
  pose_.Add(value);
  // @@protoc_insertion_point(field_add:comm.obs.proto.ObsPacket.pose)
}
inline const ::google::protobuf::RepeatedField< double >&
ObsPacket::pose() const {
  // @@protoc_insertion_point(field_list:comm.obs.proto.ObsPacket.pose)
  return pose_;
}
inline ::google::protobuf::RepeatedField< double >*
ObsPacket::mutable_pose() {
  // @@protoc_insertion_point(field_mutable_list:comm.obs.proto.ObsPacket.pose)
  return &pose_;
}

// repeated .comm.pose.proto.Vector2f stable_laser_points = 4;
inline int ObsPacket::stable_laser_points_size() const {
  return stable_laser_points_.size();
}
inline void ObsPacket::clear_stable_laser_points() {
  stable_laser_points_.Clear();
}
inline const ::comm::pose::proto::Vector2f& ObsPacket::stable_laser_points(int index) const {
  // @@protoc_insertion_point(field_get:comm.obs.proto.ObsPacket.stable_laser_points)
  return stable_laser_points_.Get(index);
}
inline ::comm::pose::proto::Vector2f* ObsPacket::mutable_stable_laser_points(int index) {
  // @@protoc_insertion_point(field_mutable:comm.obs.proto.ObsPacket.stable_laser_points)
  return stable_laser_points_.Mutable(index);
}
inline ::comm::pose::proto::Vector2f* ObsPacket::add_stable_laser_points() {
  // @@protoc_insertion_point(field_add:comm.obs.proto.ObsPacket.stable_laser_points)
  return stable_laser_points_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::comm::pose::proto::Vector2f >*
ObsPacket::mutable_stable_laser_points() {
  // @@protoc_insertion_point(field_mutable_list:comm.obs.proto.ObsPacket.stable_laser_points)
  return &stable_laser_points_;
}
inline const ::google::protobuf::RepeatedPtrField< ::comm::pose::proto::Vector2f >&
ObsPacket::stable_laser_points() const {
  // @@protoc_insertion_point(field_list:comm.obs.proto.ObsPacket.stable_laser_points)
  return stable_laser_points_;
}

inline const ObsPacket* ObsPacket::internal_default_instance() {
  return &ObsPacket_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace obs
}  // namespace comm

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_obs_2eproto__INCLUDED
